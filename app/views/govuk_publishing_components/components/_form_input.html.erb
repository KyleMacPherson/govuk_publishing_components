<%
  form_group_helper = GovukPublishingComponents::Presenters::FormGroupHelper.new(local_assigns)

  input = input&.dup || {}
  name = input.delete(:name)
  value = input.delete(:value)

  input[:type] ||= "text"
  input[:id] ||= form_group_helper.generate_field_id(name)

  search_icon = input.delete(:search_icon)
  numeric = input.delete(:numeric)
  width = input.delete(:width)
  prefix = input.delete(:prefix)
  suffix = input.delete(:suffix)

  if numeric
    input[:inputmode] = "numeric"
    input[:pattern] ||= "[0-9]*"
  end

  input[:class] = %w(govuk-input gem-c-form-input__input)
  input[:class].append(*form_group_helper.additional_field_classes(input))
  input[:class] << "govuk-input--width-#{width}" if [2, 3, 4, 5, 10, 20, 30].include?(width)
  input[:class] << "gem-c-form-input__input--search-icon" if search_icon
%>
<%= content_tag :div, class: "gem-c-form-input" do %>
  <%= render "govuk_publishing_components/components/form_group",
    form_group_helper.form_group_options.merge({ for_id: input[:id] }) do |field| %>
    <%
      input[:class] << "govuk-input--error" if field[:has_error]
      form_group_helper.merge_described_by(input, field[:describedby].values)
    %>
    <%= content_tag :div, class: "govuk-input__wrapper" do %>
      <%= tag.span prefix, class: "govuk-input__prefix", aria: { hidden: true } if prefix.present? %>
      <%= text_field_tag name, value, input %>
      <%= tag.span suffix, class: "govuk-input__suffix", aria: { hidden: true } if suffix.present? %>
    <% end %>
  <% end %>
<% end %>
