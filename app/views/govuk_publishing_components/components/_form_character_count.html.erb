<%
  form_group_helper = GovukPublishingComponents::Presenters::FormGroupHelper.new(local_assigns)

  maxlength ||= nil
  maxwords ||= nil
  threshold ||= nil

  raise ArgumentError, "maxlength or maxwords is required" if !maxlength && !maxwords
  raise ArgumentError, "maxlength and maxwords is not supported" if maxlength && maxwords

  textarea = textarea&.dup || {}
  name = textarea.delete(:name)
  value = textarea.delete(:value)

  textarea[:id] ||= form_group_helper.generate_field_id(name)
  textarea[:rows] ||= 5
  textarea[:spellcheck] = textarea.fetch(:spellcheck, true)

  textarea[:class] = %w(govuk-textarea govuk-js-character-count gem-c-form-character-count__textarea)
  textarea[:class].append(*form_group_helper.additional_field_classes(textarea))

  character_count_id = "#{textarea[:id]}-info"
%>
<%= content_tag :div,
  class: "gem-c-form-character-count govuk-character-count",
  data: {
    module: "govuk-character-count",
    maxlength: maxlength,
    maxwords: maxwords,
    threshold: threshold
  } do %>

  <%= render "govuk_publishing_components/components/form_group",
    form_group_helper.form_group_options.merge({ for_id: textarea[:id] }) do |field| %>
    <%
      textarea[:class] << "govuk-textarea--error" if field[:has_error]
      form_group_helper.merge_described_by(textarea, field[:describedby].values)
    %>
    <%= text_area_tag(name, value, textarea) %>
    <span id="<%= character_count_id %>" class="govuk-hint govuk-character-count__message" aria-live="polite">
      You can enter up to <%= maxlength || maxwords %> <%= maxlength ? 'characters' : 'words' %>
    </span>
  <% end %>
<% end %>
